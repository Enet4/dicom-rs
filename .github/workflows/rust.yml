name: continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test (default)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.72.0
          - stable
          - beta
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
          cache: true
      - if: matrix.rust == 'stable'
        run: cargo fmt -- --check

      # test project with default + extra features
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test --features image,ndarray,sop-class,rle,cli,jpegxl
      # test dicom-pixeldata with openjp2
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test -p dicom-pixeldata --features openjp2
      # test dicom-pixeldata with openjpeg-sys and charls
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test -p dicom-pixeldata --features openjpeg-sys,charls
      # test dicom-pixeldata with gdcm-rs
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test -p dicom-pixeldata --features gdcm
      # test dicom-pixeldata without default features
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test -p dicom-pixeldata --no-default-features
      # test dicom-ul with async feature
      - if: matrix.rust == 'stable' || matrix.rust == 'beta'
        run: cargo test -p dicom-ul --features async
      # test/check library projects with minimum rust version
      - if: matrix.rust == '1.72.0'
        run: |
          cargo test \
            -p dicom-core \
            -p dicom-encoding \
            -p dicom-dictionary-std \
            -p dicom-parser \
            -p dicom-transfer-syntax-registry \
            -p dicom-object
          cargo test -p dicom-json
          # can test non-binary part of dicom-dump
          cargo test -p dicom-dump --no-default-features --features sop-class
          # cannot run tests, only build
          cargo build -p dicom-ul -p dicom-pixeldata
          # check parent crate
          cargo check -p dicom
        env:
          RUSTFLAGS: -A warnings # allows warnings, to not pollute CI with warnings that are no longer valid with stable rust version
      # run Clippy with stable toolchain
      - if: matrix.rust == 'stable'
        run: cargo clippy
        env:
          RUSTFLAGS: -D warnings

  check_windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - run: cargo build --features=cli,inventory-registry,sop-class

  check_macos:
    name: Check (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
      - run: cargo check
    
